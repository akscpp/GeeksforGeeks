#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
    stack<pair<BinaryTreeNode<int>*,int>>st;
    vector<int>pre,in,post;
    if(root) st.push({root,1});
    while(!st.empty()){
        auto p = st.top();
        st.pop();
        if(p.second==1){
            pre.push_back(p.first->data);
            p.second++;
            st.push(p);
            if(p.first->left!=NULL){
              st.push({p.first->left, 1});
            }
        }else if(p.second==2){
            in.push_back(p.first->data);
            p.second++;
            st.push(p);
            if(p.first->right!=NULL){
                st.push({p.first->right,1});
            }
        }else{
            post.push_back(p.first->data);
        }
    }
    return{ in , pre  , post};




}
